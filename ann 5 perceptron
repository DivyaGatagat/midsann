import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import Perceptron
from sklearn.datasets import make_classification

# Generate data and train Perceptron
X, y = make_classification(n_features=2, n_informative=2, n_redundant=0, random_state=1)
clf = Perceptron().fit(X, y)

# Plot data and decision boundary
plt.scatter(X[:, 0], X[:, 1], c=y, cmap='rainbow', edgecolor='k')
xlim, ylim = plt.gca().get_xlim(), plt.gca().get_ylim()
xx, yy = np.meshgrid(np.linspace(xlim[0], xlim[1]), np.linspace(ylim[0], ylim[1]))
Z = clf.decision_function(np.c_[xx.ravel(), yy.ravel()]).reshape(xx.shape)
plt.contour(xx, yy, Z, levels=[0], colors='k', linestyles='-')
plt.show()
